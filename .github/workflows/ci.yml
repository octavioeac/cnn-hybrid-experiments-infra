name: Terraform GCP

on:
  pull_request:
    branches: [ main ]
    paths: [ 'infra/**', '.github/workflows/terraform-gcp.yml' ]
  push:
    branches: [ main ]
    paths: [ 'infra/**', '.github/workflows/terraform-gcp.yml' ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_WORKING_DIR: infra
  TF_BACKEND_BUCKET: tf-cnn-hybrid-experiments
  TF_BACKEND_PREFIX: env/${{ github.ref_name }}

jobs:
  plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_wrapper: false }
      - name: Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=${{ env.TF_BACKEND_PREFIX }}"
      - name: Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate
      - name: Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -out=tfplan
          terraform show -no-color tfplan > tfplan.txt
      - name: Comment plan
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('infra/tfplan.txt','utf8').slice(0, 60000);
            await github.rest.issues.createComment({ ...context.repo, issue_number: context.issue.number, body: "### Plan\n```\n"+plan+"\n```" });

  apply:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: { name: production }
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_wrapper: false }
      - name: Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=env/prod"
      - name: Plan (safety)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan
      - name: Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan
